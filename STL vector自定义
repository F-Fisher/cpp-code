#include<iostream>
#include<vector>
#include <algorithm>
#include<string>
using namespace std;
//vector容器中释放自定义数据类型
class Person
{

public:
	Person(string name, int age)
	{
		this->m_Name = name;
		this->m_Age = age;
	}
	string m_Name;
	int m_Age;



};

void test01()
{
	vector<Person>v;
	Person p1("aa", 10);
	Person p2("cc", 20);
	Person p3("dd", 30);
	Person p4("ee", 40);
	Person p5("ff", 50);
	//向容器中添加数据
	v.push_back(p1);
	v.push_back(p2);
	v.push_back(p3);
	v.push_back(p4);
	v.push_back(p5);
	//遍历数据
	for (vector<Person>::iterator it = v.begin(); it != v.end(); it++)
	{
		cout << (*it).m_Name <<" " << (*it).m_Age << endl;
	}

}
//存放自定义数据类型指针
void test02()
{
	vector<Person*>v;
	Person p1("aaa", 10);
	Person p2("ccc", 20);
	Person p3("ddd", 30);
	Person p4("eee", 40);
	Person p5("fff", 50);
	//向容器中添加数据
	v.push_back(&p1);
	v.push_back(&p2);
	v.push_back(&p3);
	v.push_back(&p4);
	v.push_back(&p5);
	for (vector<Person*>::iterator it = v.begin(); it != v.end(); it++)
	{
		cout << (**it).m_Name << " " << (**it).m_Age << endl;
	}
}
int main()
{
	test01();
	test02();
	system("pause");
	return 0;

}
