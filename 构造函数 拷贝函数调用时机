#include<iostream>
using namespace std;
//拷贝构造函数的调用时机
// 1 使用一个已经创建完毕的对象来初始化一个新对象
// 2 值传递的方式给函数传递值
// 3 值方式返回局部变量

class Person
{
public:
	Person()
	{
		cout << "默认构造函数" << endl;
	}
	Person(int age)
	{
		cout << "有参构造函数" << endl;
		m_age = age;
	}
	Person(const Person& p)
	{
		cout << "拷贝构造函数" << endl;
		m_age = p.m_age;
	}
	~Person()
	{
		cout << "析构函数" << endl;
	}
	int m_age;

};
// 1 使用一个已经创建完毕的对象来初始化一个新对象
void test01()
{
	Person p1(20);
	Person p2(p1);
	cout << "p2 age = " << p2.m_age << endl;
}
// 2 值传递的方式给函数传递值
void done(Person p)
{
	
}
void test02()
{
Person p;
	done(p);
}
// 3 值方式返回局部变量
Person done2()
{
	Person p1;
	return p1;
}
void test03()
{
	Person p = done2();

}

int main()
{
	//test01();
	//test02();
	//test03;





	system("pause");
	return 0;
}
