#include<iostream>
#include<string>
using namespace std;
//通过全局函数打印Person信息

//全局函数类外实现
template<class T1, class T2>
class Person;
template<class T1, class T2>
void printPerson2(Person<T1, T2>p)//让编译器提前知道，还有Person类也要提前声明，包括模板声明
{
	cout << "类外姓名 " << p.m_name << " " << "年龄 " << p.m_age << endl;

 }

template<class T1, class T2>
class Person
{

//全局函数类内实现
	friend void printPerson(Person<T1, T2>p)
	{
		cout << "类内姓名 " << p.m_name << " " << "年龄 " << p.m_age << endl;
	}
	//类外实现
	friend void printPerson2<>(Person<T1, T2>p);//加空参数列表，还要让编译器提前知道
public:
	Person(T1 name, T2 age)
	{
		this->m_name = name;
		this->m_age = age;
	}
	void showPerson()
	{
		cout << "姓名 " << this->m_name << " " << "年龄 " << m_age << endl;
	}

	T1 m_name;
	T2 m_age;
};

void test01()
{
	Person<string, int>p("ffisher", 10);
	printPerson(p);
	printPerson2(p);
}

int main()
{
	test01();
	system("pause");
	system("cls");
}
