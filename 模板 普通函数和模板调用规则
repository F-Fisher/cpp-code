#include<iostream>
using namespace std;
// 1 如果模板和普通都可调用，优先普通
// 2 可以通过空模板参数列表强制调用模板
// 3 函数模板可以发生函数重载
// 4 如果函数模板可以产生更好的匹配，优先调用函数模板
void myPrint(int a, int b)
{
	cout << "普通函数" << endl;
}
template<class T>
void myPrint(T a, T b)
{
	cout << "模板调用" << endl;
}
template<class T>
void myPrint(T a, T b,T c)
{
	cout << "重载模板调用" << endl;
}
void test01()
{
	int a = 10;
	int b = 20;
	myPrint(a, b);//调用普通函数

	//通过空模板参数列表，强制调用模板
	myPrint<>(a, b);
	myPrint<>(a, b,100);

	//如果更好匹配
	char d = 'a';
	char e = 'b';
	myPrint(d, e);//模板不需要隐式转换

}
int main()
{
	test01();
	system("pause");
	return 0;

}
