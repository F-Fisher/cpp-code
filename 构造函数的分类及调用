#include<iostream>
using namespace std;
//分类 带哦用
//按参数分类：有参构造 无参构造（默认构造）
//按类型分类：普通构造 拷贝构造  
class Person
{
public:
	Person()//无参构造
	{
		cout << "无参构造函数调用" << endl;
	}
	Person(int a)//有参构造
	{
		age = a;
		cout << "有参构造函数调用" << endl;
	}
	//拷贝构造
	Person( const Person &p)
	{
		//将传入的人身上的所有属性拷贝到我的身上
		age = p.age;
		cout << "拷贝函数调用" << endl;
	}


	~Person()
	{
		cout << "析构函数调用" << endl;
	}
	int age;
};

//调用
void test01()
{
	//括号法
	
	//Person p;//默认函数调用
	//Person p2(10);//有函数调用
	//Person p3(p2);//拷贝函数调用
	//cout << "age = " << p2.age << endl;
	//cout << "age = " << p3.age << endl;//拷贝函数把p2拷贝到p3
	//注意事项 调用默认构造函数时不要加(),编译器会认为是一个函数的声明,不会认为在创建对象
	/*Person p4();
	void func();*/

	//显示法

	Person p1;
	Person p2 = Person(10);//有参构造
	Person p3 = Person(p2);//拷贝构造
	//Person(10);//匿名对象 当前行结束后，系统马上释放
	//  注意  不要利用拷贝构造函数初始化匿名构造函数 编译器会认为认为Person （p3） == Person p3;对象的声明
	Person(p3);

	//隐式转换法
	Person p4 = 10;//相当于   Person p4 = Person(10);有参构造
	Person p5 = p4;//拷贝构造
}

int main()
{
	test01();



	system("pause");
	return 0;
}
