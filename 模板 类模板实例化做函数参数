#include<iostream>
#include<string>
using namespace std;
template<class T1, class T2>
class Person
{
public:
	Person(T1 name, T2 age)
	{
		this->m_name = name;
		this->m_age = age;
	}
    void showPerson()
{
		cout << "姓名 " << this->m_name <<" " << "年龄 " << m_age << endl;
}

	T1 m_name;
	T2 m_age;
};
//指定传入类型
void printPerson1(Person<string, int>&p)
{
	p.showPerson();
}

//参数模板化
template<class T1, class T2>
void printPerson2(Person<T1,T2>&p)
{
	p.showPerson();
	cout << "T1的类型" << typeid(T1).name () << endl;

}

//整个类模板化
template<class T>
void printPerson3(T&p)
{
	p.showPerson();
}

void test01()
{
	Person<string, int>p("闲渔", 20);
	printPerson1(p);
}
void test02()
{
	Person<string, int>p("闲", 20);
	printPerson2(p);
}
void test03()
{
	Person<string, int>p("渔", 20);
	printPerson3(p);
}
int main()
{
	test01();
	test02();
	test03();
	system("pause");
	system("cls");
}
